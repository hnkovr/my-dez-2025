import logging
import sys

class Logger(logging.Formatter):
    FORMATS = {
        ##
        # logging.DEBUG:    "\033[2m%(asctime)s üêõ DEBUG    %(message)s\033[0m",
        # logging.INFO:     "\033[36m%(asctime)s ‚ÑπÔ∏è  INFO     %(message)s\033[0m",
        # logging.WARNING:  "\033[33m%(asctime)s ‚ö†Ô∏è  WARNING  %(message)s\033[0m",
        # logging.ERROR:    "\033[31m%(asctime)s üî• ERROR    %(message)s\033[0m",
        # logging.CRITICAL: "\033[1;41m%(asctime)s üí• CRITICAL %(message)s\033[0m",
        logging.DEBUG:    "\033[2m%(asctime)s üêõ %(message)s\033[0m",
        logging.INFO:     "\033[36m%(asctime)s ‚ÑπÔ∏è %(message)s\033[0m",
        logging.WARNING:  "\033[33m%(asctime)s ‚ö†Ô∏è %(message)s\033[0m",
        logging.ERROR:    "\033[31m%(asctime)s üî• %(message)s\033[0m",
        logging.CRITICAL: "\033[1;41m%(asctime)s üí• %(message)s\033[0m",
    }

    def format(self, record):
        log_fmt = self.FORMATS.get(record.levelno)
        formatter = logging.Formatter(log_fmt, "%y/%m/%d %H:%M:%S")
        return formatter.format(record)

def get_logger(name="app") -> logging.Logger:
    logger = logging.getLogger(name)
    if not logger.hasHandlers():
        handler = logging.StreamHandler(sys.stdout)
        handler.setFormatter(Logger())
        logger.addHandler(handler)
        logger.setLevel(logging.DEBUG)
    return logger

def demo():
    from src.logger import get_logger

    log = get_logger("test")

    log.debug("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    log.info("–°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞")
    log.warning("–ü–æ—á—Ç–∏ –æ—à–∏–±–∫–∞")
    log.error("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
    log.critical("–í–°–Å –£–ü–ê–õ–û!")

if __name__ == '__main__':
    demo()